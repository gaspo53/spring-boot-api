buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://repo.spring.io/libs-release" }
    }

    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.5+')
        classpath('net.saliman:gradle-properties-plugin:1.4.+')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: "org.springframework.boot"
apply plugin: 'net.saliman.properties'

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://repo.spring.io/libs-release" }
}

configurations {
    compile.exclude module: 'spring-boot-starter-jetty'
    compile.exclude module: 'spring-boot-starter-logging'
    compile.exclude module: 'logback-classic'
    compile.exclude module: 'logback-access'
}

dependencies {

    // SPRING STARTERS - COMPONENTS
    compile('org.springframework.boot:spring-boot-starter-log4j2')
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')

    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-aop')

    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.ws:spring-ws-core')
    compile('org.springframework.boot:spring-boot-starter-mail')

    //JMS
    compile('org.springframework:spring-jms')
    compile('org.apache.activemq:activemq-broker')

    //////////////////////////////////////////////

    compile('org.aspectj:aspectjweaver:+')

    compile('commons-io:commons-io:2.+')
    compile('commons-validator:commons-validator:1.4.+')
    compile('cglib:cglib:3.1')
    compile('org.apache.commons:commons-lang3:3.3.+')
    compile('org.apache.commons:commons-csv:1.+')

    compile('javax.servlet:javax.servlet-api:3.1.0')
    compile('org.apache.camel:camel-spring:2.13.2')
    compile('org.apache.camel:camel-test-spring:2.13.2')
    compile('org.apache.httpcomponents:httpclient:4.5')


    //Ehcache
    compile('net.sf.ehcache:ehcache:2.+')

    //Swagger
    compile("io.springfox:springfox-swagger2:2.+")

    //Google Guava
    compile("com.google.guava:guava:18.+")

    //Test scope
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

compileJava.options.encoding = 'UTF-8'

compileJava{
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

jar {
    baseName = 'example-api'
    version =  '0.1.0'
}

test{
    testLogging{
        events "passed", "skipped", "failed"
    }
}

tasks.withType(JavaCompile) {
  options.encoding = "UTF-8"
}

if (hasProperty('jvmArguments')){
    applicationDefaultJvmArgs = jvmArguments.split(',').toList()
}

//Application plugin props
mainClassName = "com.example.api.config.boot.ApplicationAPI"

if ("DEVELOP".equals(environmentName)){
    eclipse {
        classpath {
          //default settings for downloading sources and Javadoc:
          downloadSources = true
          downloadJavadoc = true
        }
    }
}

if ("PRODUCTION".equals(environmentName)){
}
